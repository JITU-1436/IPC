head	1.3;
access;
symbols;
locks
	root:1.3; strict;
comment	@ * @;


1.3
date	2015.12.28.19.15.34;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2015.12.28.18.05.17;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2015.12.28.17.56.31;	author root;	state Exp;
branches;
next	;


desc
@processing client for findingf the difference between two numbers and again sending the result to the server
/
@


1.3
log
@*** empty log message ***
@
text
@#include<stdio.h>
#include"request.h"

int main(int argc, char *argv[])
{
	struct request sub;
	int rfd, wfd, ret, res, byt;
	if(argc != 3)
	{
		printf("Error");
	}
	
	rfd = atoi(argv[1]);
	wfd = atoi(argv[2]);
	printf("File: %s\t rfd = %d\n",__FILE__, rfd);
	printf("File: %s\t wfd = %d\n",__FILE__, wfd);

	ret = read(rfd, &sub, sizeof(struct request));
	
	printf("File: %s Read %d bytes from rfd\n",__FILE__, ret);

	printf("File: %s sub.oper = %c\n",__FILE__,(char)sub.oper);
        printf("File: %s sub.opr1 = %d\n",__FILE__, (int)sub.opr1);
        printf("File: %s sub.opr2 = %d\n",__FILE__, (int)sub.opr2);
        res =sub.opr1 - sub.opr2;
        printf("File: %s res = %d\n",__FILE__, res);
        byt = write(wfd, &res,sizeof(int));
        printf("File: %s Wrote %d bytes\n", __FILE__, byt);	
}
@


1.2
log
@number getting subtracted
@
text
@d22 3
a24 3
	printf("File: %s add.oper = %c\n",__FILE__,(char)sub.oper);
        printf("File: %s add.opr1 = %d\n",__FILE__, (int)sub.opr1);
        printf("File: %s add.opr2 = %d\n",__FILE__, (int)sub.opr2);
@


1.1
log
@Initial revision
@
text
@d25 1
a25 1
        res =sub.opr1 + sub.opr2;
@
